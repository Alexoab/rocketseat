/* *{
  margin: 0;
  padding: 0;
  box-sizing: border-box;
} */
:root{ 
  /* variáveis no conteúdo   */
  /* --text-color: white; */
  --text-color: rgba(255, 255, 255, 1);
  --bg-url: url(./assets/bg-mobile.jpg);
  --stroke-color-dark-mode:rgba(255, 255, 255, 0.5);
  --surface-color-dark-mode: rgba(255, 255, 255, 0.10);
  --surface-color-dark-mode-hover:rgba(255, 255, 255, 0.05);
  --highlight-color-light-mode: rgba(0, 0, 0, 0.2);
  --switch-bg-url: url(./assets/moon-starts.svg);
}
.light{
 
  --text-color: rgba(0, 0, 0, 1);
  --bg-url: url(./assets/bg-mobile-light.jpg);
  --stroke-color-dark-mode:rgba(0, 0, 0, 0.50);
  --surface-color-dark-mode: rgba(255, 255, 255, 0.05);
  --surface-color-dark-mode-hover: rgba(0, 0, 0, 0.02);
  --highlight-color-light-mode: rgba(0, 0, 0, 0.1);
  --switch-bg-url: url(./assets/sum.svg);
}

body {
  /* background-image: url(assets/bg-mobile.jpg);
  background-repeat: no-repeat;
  background-position:  center;
  background-size: cover; */

  /* 
  Aqui eu uso como container coloco largura e altura
  background-size:contain ;
  width: 100vw;
  height: 100vh; */

  /* colocando em uma única propriedade(shorthand = atalho)  background: color image repeat position/size ;*/
  background: var(--bg-url) no-repeat top center / cover;
  height: 100vh;
}
/* aplico em todo o corpo * seletor universal */
body * {
  font-family: "Inter", sans-serif;
  color: var(--text-color);
}
#container0 {
  /* retiro a borda de marcação */
  /* border: 1px solid red; */
  /* width: 360px; */
  width: 100%;
  max-width: 588px;
  /* não coloco altura fixa  para que o conteúdo va aptando.   */
  /* height: 800px; */

  margin: 56px auto 0px;

  /* existe uma regra em css que o top e booton não é auto */
  /* aliando ao meio
   margin-right: auto;
  margin-left: auto; */
  padding: 0 24px;
}
a {
  display: block;
}
/* lembrando que não preciso definir a height, ela dever ser fluida na caixa  */
#profile {
  /* segunda forma de fazer alinhamento. Usando o elemento pai  */
  text-align: center;
}
#profile img {
  /* 1° forma de alinhar */
  /* display: block;
 margin: auto; */
  width: 112px;
  /* a img é um elemento inline. a div é em block */
  /* margin: auto;  não recebe este tipo*/
  padding: 24px;
  /* Aqui eu deixo no formato circular */
  border-radius: 50%;
}
#profile p {
  /* font-size: 16px; os navegadores já vem por padrão*/
  font-style: normal;
  font-weight: 500; /* negrito o peso dele  */
  line-height: 24px;
  margin-top: 8px;
}
#switch{
  /* border: 1px solid red; */
  /* Quero movimentar . com top left rigth */
  /* relativo ao button */
  position: relative;
  /* colocando o mesma largura  */
  width: 64px;
  /* centralizando a div. displaybloq  alinhando */
  margin: 4px auto;

}
/* switch trocando os temas */
#switch button{
  width: 32px;
  height: 32px;
  background: white var(--switch-bg-url) no-repeat center;
  border: 0;
  border-radius: 50%;
  
  position: absolute;
  /* navegando em qualquer lugar na pagina . 
  top: 0;
  left: 0; 
   bottom: 50%;*/
   /* alinhando  de cima ou para baixo - tranformando o elemento */
     transform: translateY(-50%);
     /* tiro 50 depois coloco50 no top.
      */
     top: 50%;
     left: 0;
  /* subindo os andares */
  z-index: 1;
  
}
/*  fazendo a troca */
.light #switch button{
  right: 0;
  left: initial;
}

/* Ele funciona como inline */
#switch span{
  display: block;
  width: 64px;
  height: 24px;
  flex-shrink: 0;
  background: var(--surface-color-dark-mode);
  border:1px solid var(--stroke-color-dark-mode) ;
  border-radius: 9999px;
  backdrop-filter: blur(4px);
}

/* listas dos links */
ul {
  /* aqui retira os pontos da lista desodernada ul */
  list-style: none;
  /* o flex trabalha com os elementos dentro da caixa deixando lado a lado
   display: flex; */

  /*  o gap da espaço entre os elementos   gap: 8px; */
  display: flex;
  flex-direction: column;
  gap: 16px;
}
ul li a {
  /* é uma caixa dentro ul 
  li e display block ;a é inline*/
  /* border: 1px solid rgb(235, 196, 192); */
  /* o a ocupa 100% do espaço disponível.p bock também */
  display: flex;
  /* o a já e inline , então não é preciso usar flex-direction: row;
  gap: 8px;  */
  /* Para centralizar o conteúdo use : */
  justify-content: center;
  /* ou assim:  display: block;
  text-align: center */
  align-items: center;
  padding: 16px 24px;
  border-radius: 8px;
  border-radius: 8px;
  border: 1px solid var(--stroke-color-dark-mode, rgba(255, 255, 255, 0.50));
  background: var(--surface-color-dark-mode, rgba(255, 255, 255, 0.10));
  backdrop-filter: blur(4px);
  transition: background 0.3s;

}
/* pseudo-selector quando eu passar o mouse por cima */
ul li a:hover {
  border-radius: 8px;
  border: 1.5px solid var(--text-color);
  background: var(--surface-color-dark-mode-hover, rgba(255, 255, 255, 0.05));
  backdrop-filter: blur(4px);
}
#divsocial-links{
  display:flex ;
  /* gap: 16px; */
  padding: 24px;
  justify-content: center;
  
}
#divsocial-links a{
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 16px;
  transition: backkground 0.2s;

}
#divsocial-links a:hover {
background:  var(--highlight-color-light-mode); 
border-radius: 50%;

}
footer{
  padding: 24px;
  text-align: center;
  font-size: 14px;


}
/* media queries "atroom" -- é o arroba */
/* adicione as regras acima do px setado . */
@media (min-width: 768px) {

:root {
  --bg-url: url(./assets/bg-desktop.jpg);
  }
  .light{
    --bg-url: url(./assets/bg-mobile-light.jpg);
  }
}
